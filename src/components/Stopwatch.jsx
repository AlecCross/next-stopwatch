import { useEffect, useState } from "react";
import styles from "../styles/Stopwatch.module.css"; // –î–æ–¥–∞—î–º–æ –æ–∫—Ä–µ–º–∏–π —Ñ–∞–π–ª —Å—Ç–∏–ª—ñ–≤

export default function Stopwatch() {
  const [time, setTime] = useState(0);
  const [isRunning, setIsRunning] = useState(false);
  const [isLoading, setIsLoading] = useState(true); // –°—Ç–∞–Ω –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è

  // –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —á–∞—Å—É –ø—Ä–∏ –≤—ñ–¥–∫—Ä–∏—Ç—Ç—ñ —Å—Ç–æ—Ä—ñ–Ω–∫–∏
  useEffect(() => {
    const savedStartTime = localStorage.getItem("stopwatchStartTime");
    const savedRunning = localStorage.getItem("stopwatchRunning");

    if (savedRunning === "true" && savedStartTime) {
      const elapsed = Date.now() - parseInt(savedStartTime, 10);
      setTime(elapsed);
      setIsRunning(true);
    }
    setIsLoading(false); // –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ
  }, []);

  // –û–Ω–æ–≤–ª–µ–Ω–Ω—è —á–∞—Å—É, —è–∫—â–æ —Å–µ–∫—É–Ω–¥–æ–º—ñ—Ä –∑–∞–ø—É—â–µ–Ω–∏–π
  useEffect(() => {
    let interval;
    if (isRunning) {
      interval = setInterval(() => {
        const savedStartTime = localStorage.getItem("stopwatchStartTime");
        setTime(Date.now() - parseInt(savedStartTime, 10));
      }, 10);
    } else {
      clearInterval(interval);
    }
    return () => clearInterval(interval);
  }, [isRunning]);

  // –û–±—Ä–æ–±–∫–∞ –∫–Ω–æ–ø–∫–∏ –°—Ç–∞—Ä—Ç/–°—Ç–æ–ø
  const handleStartStop = () => {
    if (isRunning) {
      setIsRunning(false);
      localStorage.setItem("stopwatchRunning", "false");
    } else {
      const newStartTime = Date.now() - time;
      localStorage.setItem("stopwatchStartTime", newStartTime.toString());
      localStorage.setItem("stopwatchRunning", "true");
      setIsRunning(true);
    }
  };

  // –û–±—Ä–æ–±–∫–∞ –∫–Ω–æ–ø–∫–∏ –°–∫–∏–Ω—É—Ç–∏
  const handleReset = () => {
    setTime(0);
    setIsRunning(false);
    localStorage.removeItem("stopwatchStartTime");
    localStorage.setItem("stopwatchRunning", "false");
  };

  return (
    <div className={styles.container}>
      {isLoading ? (
        <div className={styles.loader}>‚è≥ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è...</div>
      ) : (
        <>
          <h1 className={styles.time}>
            {Math.floor(time / 60000)
              .toString()
              .padStart(2, "0")}
            :
            {Math.floor((time % 60000) / 1000)
              .toString()
              .padStart(2, "0")}
            :
            {Math.floor((time % 1000) / 10)
              .toString()
              .padStart(2, "0")}
          </h1>
          <div className={styles.buttons}>
            <button onClick={handleStartStop} className={styles.button}>
              {isRunning ? "‚è∏ –ó—É–ø–∏–Ω–∏—Ç–∏" : "‚ñ∂ –°—Ç–∞—Ä—Ç"}
            </button>
            <button onClick={handleReset} className={styles.buttonReset}>
              üîÑ –°–∫–∏–Ω—É—Ç–∏
            </button>
          </div>
        </>
      )}
    </div>
  );
}
